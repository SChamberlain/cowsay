
R version 3.5.1 Patched (2018-08-12 r75119) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "postal"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('postal')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("fetch_all")
> ### * fetch_all
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fetch_all
> ### Title: Grab all the 3-digit origin-destination pairs.
> ### Aliases: fetch_all
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D fetch_all(sample(all_possible_origins, 4))
> ##D 
> ##D fetch_all(show_details = TRUE, verbose = TRUE,
> ##D     write_to = glue::glue(here::here("data", "{Sys.Date()}_zip_zones.csv")))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("fetch_mail")
> ### * fetch_mail
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fetch_mail
> ### Title: Fetch postage details
> ### Aliases: fetch_mail
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D fetch_mail(origin_zip = "90210",
> ##D          destination_zip = "59001",
> ##D          type = "envelope")
> ##D 
> ##D 
> ##D fetch_mail(origin_zip = "68003",
> ##D          destination_zip = "23285",
> ##D          pounds = 4,
> ##D          ground_transportation_needed = TRUE,
> ##D          type = "package",
> ##D          shape = "rectangular",
> ##D          show_details = TRUE)
> ##D 
> ##D # Contains an invalid zip ("foobar"), which will get a "no_success" row
> ##D origins <- c("90210", "foobar", "59001")
> ##D destinations <- c("68003", "94707", "23285")
> ##D 
> ##D purrr::map2_dfr(
> ##D   origins, destinations,
> ##D   fetch_mail,
> ##D   type = "package"
> ##D )
> ##D 
> ##D # A syntactically fine request, but no results are returned
> ##D fetch_mail(origin_zip = "04101",
> ##D     destination_zip = "97211",
> ##D     shipping_date = "3018-07-04",  # way in the future!
> ##D     type = "package",
> ##D     show_details = TRUE)
> ##D 
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("fetch_zones")
> ### * fetch_zones
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fetch_zones
> ### Title: Fetch zones for a 3-digit origin zip or an origin-destination
> ###   pair
> ### Aliases: fetch_zones
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D a_zip <- fetch_zones("123")
> ##D nrow(a_zip)
> ##D 
> ##D fetch_zones("123", "456", show_details = TRUE)
> ##D 
> ##D (double_oh_seven <- fetch_zones("007", as_range = TRUE))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("fetch_zones_five_digit")
> ### * fetch_zones_five_digit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fetch_zones_five_digit
> ### Title: Fetch zones for a 5-digit origin origin-destination pair
> ### Aliases: fetch_zones_five_digit
> 
> ### ** Examples
> 
> ## Not run: 
> ##D fetch_zones_five_digit("90210", "20500")
> ##D 
> ##D fetch_zones_five_digit("40360", "09756",
> ##D                        show_details = TRUE)
> ##D 
> ##D # Supply multiple origins and destinations
> ##D purrr::map2_dfr(c("11238", "60647", "80205"),
> ##D                 c("98109", "02210", "94707"),
> ##D       fetch_zones_five_digit)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("fetch_zones_three_digit")
> ### * fetch_zones_three_digit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fetch_zones_three_digit
> ### Title: Get 3 digit zones
> ### Aliases: fetch_zones_three_digit
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D # All destination zips are returned for this origin
> ##D a_zip <- fetch_zones_three_digit("123")
> ##D nrow(a_zip)
> ##D 
> ##D # Only the zone corresponding to this origin and this destination are returned
> ##D fetch_zones_three_digit("123", "456", show_details = TRUE)
> ##D 
> ##D fetch_zones_three_digit("007", as_range = TRUE)
> ##D 
> ##D # Get multiple zips
> ##D c("897", "786") %>%
> ##D   purrr::map_df(fetch_zones_three_digit)
> ##D 
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("scrub_mail")
> ### * scrub_mail
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: scrub_mail
> ### Title: Clean the response from fetched mail
> ### Aliases: scrub_mail
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D fetch_mail_flat_rate(origin_zip = "60647",
> ##D          destination_zip = "11238", type = "envelope") %>% scrub_mail()
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.072 0.006 0.079 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
